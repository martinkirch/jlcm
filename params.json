{"name":"jLCM","tagline":"A multi-threaded implementation of the LCM algorithm","body":"# jLCM\r\n\r\nThis is a Java implementation of the LCM (Linear Closed itemsets Miner) algorithm, as proposed by T.Uno & H.Arimura. It is multi-threaded, as proposed by Négrevergne et al., hence the name of its main class : PLCM.\r\n\r\nReference papers :\r\n\r\n* \"An efficient algorithm for enumerating closed patterns in transaction \r\ndatabases\" by T. Uno, T. Asai, Y. Uchida and H. Arimura, in Discovery Science, \r\n2004\r\n* \"Discovering closed frequent itemsets on multicore: Parallelizing computations \r\nand optimizing memory accesses\" by B. Negrevergne, A. Termier, J-F. Mehaut, \r\nand T. Uno in International Conference on High Performance Computing & \r\nSimulation, 2010\r\n\r\n## Compiling and running jLCM\r\n\r\nUse [Maven](http://maven.apache.org/) to build the program. This should create `jLCM-1.0-jar-with-dependencies.jar`. Run this jar without arguments to have more details about the invocation.\r\n\r\nYou may find example input files in the [FIMI repository](http://fimi.ua.ac.be/data/).\r\n\r\n## License and copyright owners\r\n\r\nThis work is released under the Apache License 2.0 (see LICENSE).\r\n\r\nCopyright 2013,2014 Martin Kirchgessner, Vincent Leroy, Alexandre Termier, \r\nSihem Amer-Yahia, Marie-Christine Rousset, Université Joseph Fourier and CNRS.\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}